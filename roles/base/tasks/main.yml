---

- name: install pacman conf
  copy:
    src: pacman.conf
    dest: /etc/pacman.conf

- name: install bunch of packages
  pacman:
    name:
      - git
      - net-tools
      - dnsutils
      - ldns
      - vde2
      - pavucontrol
      - pulseaudio
      - vlc
      - chromium
      - firefox
      - jq
      - arandr

- name: install vm & container tools
  pacman:
    name:
      - qemu
      - bridge-utils
      - openbsd-netcat
      - ebtables
      - virt-manager
      - docker
  notify:
    - service libvirtd
    - socket docker

- name: check if pikaur is installed
  shell: pacman -Q pikaur
  register: pikaur_installed
  changed_when: False
  failed_when: False

- name: install pikaur
  when: "not ansible_check_mode and pikaur_installed.rc != 0"
  block:
  - name: create user aur_builder
    user:
      name: aur_builder
      group: wheel

  - name: clone pikaur
    git:
      repo: https://aur.archlinux.org/pikaur.git
      dest: /tmp/pikaur-clone
    become: yes
    become_user: aur_builder

  - lineinfile:
      path: /etc/sudoers.d/11-install-aur_builder
      line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
      create: yes
      validate: "visudo -cf %s"

  - name: install pikaur
    shell: makepkg -fsri --noconfirm
    args:
      chdir: /tmp/pikaur-clone
    become: yes
    become_user: aur_builder

- name: remove pikaur installation files
  file:
    path: /tmp/pikaur-clone
    state: absent

- name: remove aur_builder sudoer file
  file:
    path: /etc/sudoers.d/11-install-aur_builder
    state: absent

- name: remove aur_builder user
  user:
    name: aur_builder
    state: absent

- name: enable timesync
  service:
    name: systemd-timesyncd.service
    state: started
    enabled: yes

- name: add ssh config
  copy:
    src: ssh-config
    dest: ~/.ssh/config
  become: yes
  become_user: "{{ user.name }}"

- name: add ssh config.d
  file:
    path: ~/.ssh/config.d
    mode: "750"
    state: directory
  become: yes
  become_user: "{{ user.name }}"

- name: copy acu ssh config
  copy:
    src: acu-ssh-config
    dest: ~/.ssh/config.d/acu
    mode: "440"
  become: yes
  become_user: "{{ user.name }}"

- name: copy cri ssh config
  copy:
    src: cri-ssh-config
    dest: ~/.ssh/config.d/cri
  become: yes
  become_user: "{{ user.name }}"

- name: install pam environment file
  copy:
    src: pam_environment
    dest: ~/.pam_environment
